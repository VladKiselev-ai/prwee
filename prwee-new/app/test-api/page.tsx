'use client';

import { useState } from 'react';
import Header from '@/components/Header';

export default function TestAPIPage() {
  const [openaiResult, setOpenaiResult] = useState<any>(null);
  const [emailResult, setEmailResult] = useState<any>(null);
  const [telegramResult, setTelegramResult] = useState<any>(null);
  const [loading, setLoading] = useState<string | null>(null);
  const [emailAddress, setEmailAddress] = useState('test@example.com');

  const testOpenAI = async () => {
    setLoading('openai');
    try {
      const response = await fetch('/api/test/openai', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          text: 'Apple –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –Ω–æ–≤—ã–π iPhone 15 —Å —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏. –ö–æ–º–ø–∞–Ω–∏—è –æ–±—ä—è–≤–∏–ª–∞ –æ –≤—ã–ø—É—Å–∫–µ —Ñ–ª–∞–≥–º–∞–Ω—Å–∫–æ–≥–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–∞–º–µ—Ä—É, –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω.'
        })
      });
      const data = await response.json();
      setOpenaiResult(data);
    } catch (error) {
      setOpenaiResult({ success: false, error: error instanceof Error ? error.message : 'Unknown error' });
    } finally {
      setLoading(null);
    }
  };

  const testEmail = async () => {
    setLoading('email');
    try {
      const response = await fetch('/api/test/email', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          to: emailAddress,
          subject: '–¢–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞',
          content: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.'
        })
      });
      const data = await response.json();
      setEmailResult(data);
    } catch (error) {
      setEmailResult({ success: false, error: error instanceof Error ? error.message : 'Unknown error' });
    } finally {
      setLoading(null);
    }
  };

  const testTelegram = async () => {
    setLoading('telegram');
    try {
      const response = await fetch('/api/test/telegram', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chatId: '594250971', // –í–∞—à chatId
          message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞! üéâ\n\n–≠—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.'
        })
      });
      const data = await response.json();
      setTelegramResult(data);
    } catch (error) {
      setTelegramResult({ success: false, error: error instanceof Error ? error.message : 'Unknown error' });
    } finally {
      setLoading(null);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–µ–π
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤–∞—à–∏—Ö API –∫–ª—é—á–µ–π –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* OpenAI API */}
          <div className="card">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-2xl font-semibold text-gray-900">ü§ñ OpenAI API</h2>
              <div className={`w-3 h-3 rounded-full ${openaiResult?.success ? 'bg-green-500' : openaiResult?.success === false ? 'bg-red-500' : 'bg-gray-300'}`}></div>
            </div>
            
            <p className="text-gray-600 mb-4">
              –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å—Ç–∞—Ç–µ–π, –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–∂–∏–º–æ–∫ –∏ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            </p>
            
            <button
              onClick={testOpenAI}
              disabled={loading === 'openai'}
              className="btn-primary w-full mb-4"
            >
              {loading === 'openai' ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å OpenAI'}
            </button>

            {openaiResult && (
              <div className={`p-4 rounded-lg ${openaiResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h3 className="font-semibold mb-2">
                  {openaiResult.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ!' : '‚ùå –û—à–∏–±–∫–∞'}
                </h3>
                {openaiResult.success ? (
                  <div className="text-sm">
                    <p className="mb-2"><strong>–í—ã–∂–∏–º–∫–∞:</strong> {openaiResult.data.summary}</p>
                    <p className="mb-2"><strong>–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:</strong> {openaiResult.data.keyPoints.length}</p>
                    <p className="mb-2"><strong>–¢—Ä–µ–Ω–¥—ã:</strong> {openaiResult.data.trends.length}</p>
                    <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong> {openaiResult.data.recommendations.length}</p>
                  </div>
                ) : (
                  <div className="text-sm">
                    <p className="mb-2"><strong>–û—à–∏–±–∫–∞:</strong> {openaiResult.error}</p>
                    <p><strong>–†–µ—à–µ–Ω–∏–µ:</strong> {openaiResult.message}</p>
                  </div>
                )}
              </div>
            )}
          </div>

          {/* Email */}
          <div className="card">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-2xl font-semibold text-gray-900">üìß Email</h2>
              <div className={`w-3 h-3 rounded-full ${emailResult?.success ? 'bg-green-500' : emailResult?.success === false ? 'bg-red-500' : 'bg-gray-300'}`}></div>
            </div>
            
            <p className="text-gray-600 mb-4">
              –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤
            </p>
            
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
              </label>
              <input
                type="email"
                value={emailAddress}
                onChange={(e) => setEmailAddress(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                placeholder="your@email.com"
              />
            </div>
            
            <button
              onClick={testEmail}
              disabled={loading === 'email'}
              className="btn-primary w-full mb-4"
            >
              {loading === 'email' ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Email'}
            </button>

            {emailResult && (
              <div className={`p-4 rounded-lg ${emailResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h3 className="font-semibold mb-2">
                  {emailResult.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ!' : '‚ùå –û—à–∏–±–∫–∞'}
                </h3>
                {emailResult.success ? (
                  <div className="text-sm">
                    <p className="mb-2"><strong>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</strong> {emailResult.data.to}</p>
                    <p className="mb-2"><strong>–¢–µ–º–∞:</strong> {emailResult.data.subject}</p>
                    <p><strong>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</strong> {new Date(emailResult.data.sentAt).toLocaleString('ru-RU')}</p>
                  </div>
                ) : (
                  <div className="text-sm">
                    <p className="mb-2"><strong>–û—à–∏–±–∫–∞:</strong> {emailResult.error}</p>
                    <p><strong>–†–µ—à–µ–Ω–∏–µ:</strong> {emailResult.message}</p>
                  </div>
                )}
              </div>
            )}
          </div>

          {/* Telegram */}
          <div className="card">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-2xl font-semibold text-gray-900">üì± Telegram</h2>
              <div className={`w-3 h-3 rounded-full ${telegramResult?.success ? 'bg-green-500' : telegramResult?.success === false ? 'bg-red-500' : 'bg-gray-300'}`}></div>
            </div>
            
            <p className="text-gray-600 mb-4">
              –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            </p>
            
            <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
              <p className="text-sm text-blue-800">
                <strong>–í–∞—à ChatId:</strong> 594250971
              </p>
            </div>
            
            <button
              onClick={testTelegram}
              disabled={loading === 'telegram'}
              className="btn-primary w-full mb-4"
            >
              {loading === 'telegram' ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Telegram'}
            </button>

            {telegramResult && (
              <div className={`p-4 rounded-lg ${telegramResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h3 className="font-semibold mb-2">
                  {telegramResult.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ!' : '‚ùå –û—à–∏–±–∫–∞'}
                </h3>
                {telegramResult.success ? (
                  <div className="text-sm">
                    <p className="mb-2"><strong>Chat ID:</strong> {telegramResult.data.chatId}</p>
                    <p className="mb-2"><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</p>
                    <p><strong>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</strong> {new Date(telegramResult.data.sentAt).toLocaleString('ru-RU')}</p>
                  </div>
                ) : (
                  <div className="text-sm">
                    <p className="mb-2"><strong>–û—à–∏–±–∫–∞:</strong> {telegramResult.error}</p>
                    <p><strong>–†–µ—à–µ–Ω–∏–µ:</strong> {telegramResult.message}</p>
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="mt-12">
          <div className="card">
            <h2 className="text-2xl font-semibold text-gray-900 mb-4">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ</h2>
            
            <div className="space-y-4">
              <div>
                <h3 className="font-semibold text-lg mb-2">üîë OpenAI API</h3>
                <p className="text-gray-600 mb-2">–ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª:</p>
                <ul className="text-sm text-gray-600 list-disc list-inside space-y-1">
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –≤ .env.local</li>
                  <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "sk-"</li>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ https://platform.openai.com/account/billing</li>
                </ul>
              </div>

              <div>
                <h3 className="font-semibold text-lg mb-2">üìß Email (Gmail)</h3>
                <p className="text-gray-600 mb-2">–ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª:</p>
                <ul className="text-sm text-gray-600 list-disc list-inside space-y-1">
                  <li>–í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ Google</li>
                  <li>–°–æ–∑–¥–∞–π—Ç–µ App Password –Ω–∞ https://myaccount.google.com/apppasswords</li>
                  <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ App Password –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è</li>
                  <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ SMTP_FROM —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å SMTP_USER</li>
                </ul>
              </div>

              <div>
                <h3 className="font-semibold text-lg mb-2">üì± Telegram Bot</h3>
                <p className="text-gray-600 mb-2">–ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª:</p>
                <ul className="text-sm text-gray-600 list-disc list-inside space-y-1">
                  <li>–°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤ Telegram</li>
                  <li>–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env.local</li>
                  <li>–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç –∏ –ø–æ–ª—É—á–∏—Ç–µ chatId</li>
                  <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π chatId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
                </ul>
                <div className="mt-2 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
                  <p className="text-sm text-yellow-800">
                    <strong>–í–∞—à ChatId:</strong> 594250971 - —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
} 