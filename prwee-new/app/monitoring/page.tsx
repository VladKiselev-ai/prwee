'use client';

import { useState, useEffect } from 'react';
import Header from '@/components/Header';
import ArticleCard from '@/components/ArticleCard';
import { MonitoredArticle } from '@/types';
import { Bookmark, Filter, Search } from 'lucide-react';

export default function MonitoringPage() {
  const [monitoredArticles, setMonitoredArticles] = useState<MonitoredArticle[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterImportance, setFilterImportance] = useState<string>('all');
  const [filterSentiment, setFilterSentiment] = useState<string>('all');

  useEffect(() => {
    fetchMonitoredArticles();
  }, []);

  const fetchMonitoredArticles = async () => {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞—Ç–µ–π
      // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const mockArticles: MonitoredArticle[] = [
        {
          article: {
            _id: '1',
            title: '–í–∞–∂–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö',
            content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏...',
            summary: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∂–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö',
            url: 'https://example.com/article1',
            source: { name: 'TechNews', url: 'https://technews.com' },
            category: { _id: '1', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', slug: 'tech', description: '', icon: 'üíª', color: '#3b82f6', isActive: true, rssSources: [], createdAt: '', updatedAt: '' },
            tags: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏'],
            publishedAt: new Date().toISOString(),
            image: '',
            author: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            readingTime: 5,
            sentiment: 'positive' as const,
            importance: 9,
            isMonitored: true,
            monitoredBy: ['user1'],
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString(),
          },
          addedAt: new Date().toISOString(),
          notes: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç—å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è',
        },
        // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –º–æ–∫–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –∑–¥–µ—Å—å
      ];
      
      setMonitoredArticles(mockArticles);
    } catch (error) {
      console.error('Error fetching monitored articles:', error);
    } finally {
      setLoading(false);
    }
  };

  const filteredArticles = monitoredArticles.filter(({ article }) => {
    const matchesSearch = article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         article.summary.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesImportance = filterImportance === 'all' || 
                             (filterImportance === 'high' && article.importance >= 8) ||
                             (filterImportance === 'medium' && article.importance >= 5 && article.importance < 8) ||
                             (filterImportance === 'low' && article.importance < 5);
    
    const matchesSentiment = filterSentiment === 'all' || article.sentiment === filterSentiment;
    
    return matchesSearch && matchesImportance && matchesSentiment;
  });

  const handleMonitorToggle = (articleId: string, isMonitored: boolean) => {
    if (!isMonitored) {
      setMonitoredArticles(prev => 
        prev.filter(item => item.article._id !== articleId)
      );
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="animate-pulse">
            <div className="h-8 bg-gray-200 rounded w-1/4 mb-8"></div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {[...Array(6)].map((_, i) => (
                <div key={i} className="card">
                  <div className="h-4 bg-gray-200 rounded w-3/4 mb-4"></div>
                  <div className="h-3 bg-gray-200 rounded w-full mb-2"></div>
                  <div className="h-3 bg-gray-200 rounded w-2/3"></div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <div className="flex items-center space-x-2 mb-4">
            <Bookmark className="w-6 h-6 text-primary-600" />
            <h1 className="text-3xl font-bold text-gray-900">
              –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Å—Ç–∞—Ç—å–∏
            </h1>
          </div>
          
          <p className="text-gray-600">
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ç–∞—Ç—å—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
          </p>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
        <div className="card mb-8">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
              <input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              />
            </div>
            
            <select
              value={filterImportance}
              onChange={(e) => setFilterImportance(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
            >
              <option value="all">–í—Å–µ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏</option>
              <option value="high">–í—ã—Å–æ–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å</option>
              <option value="medium">–°—Ä–µ–¥–Ω—è—è –≤–∞–∂–Ω–æ—Å—Ç—å</option>
              <option value="low">–ù–∏–∑–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å</option>
            </select>
            
            <select
              value={filterSentiment}
              onChange={(e) => setFilterSentiment(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
            >
              <option value="all">–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</option>
              <option value="positive">–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ</option>
              <option value="negative">–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ</option>
              <option value="neutral">–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ</option>
            </select>
            
            <button className="btn-secondary flex items-center justify-center space-x-2">
              <Filter className="w-4 h-4" />
              <span>–°–±—Ä–æ—Å–∏—Ç—å</span>
            </button>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
          <div className="card text-center">
            <div className="text-2xl font-bold text-primary-600">
              {monitoredArticles.length}
            </div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö</div>
          </div>
          
          <div className="card text-center">
            <div className="text-2xl font-bold text-green-600">
              {monitoredArticles.filter(({ article }) => article.sentiment === 'positive').length}
            </div>
            <div className="text-gray-600">–ü–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö</div>
          </div>
          
          <div className="card text-center">
            <div className="text-2xl font-bold text-red-600">
              {monitoredArticles.filter(({ article }) => article.importance >= 8).length}
            </div>
            <div className="text-gray-600">–í–∞–∂–Ω—ã—Ö</div>
          </div>
          
          <div className="card text-center">
            <div className="text-2xl font-bold text-blue-600">
              {monitoredArticles.filter(({ article }) => article.updatedAt > article.publishedAt).length}
            </div>
            <div className="text-gray-600">–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö</div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π */}
        {filteredArticles.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredArticles.map(({ article, notes }) => (
              <div key={article._id} className="relative">
                <ArticleCard 
                  article={article}
                  onMonitorToggle={handleMonitorToggle}
                />
                {notes && (
                  <div className="absolute top-2 right-2 bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded">
                    –ó–∞–º–µ—Ç–∫–∞
                  </div>
                )}
              </div>
            ))}
          </div>
        ) : (
          <div className="text-center py-12">
            <Bookmark className="w-16 h-16 text-gray-300 mx-auto mb-4" />
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              {searchTerm || filterImportance !== 'all' || filterSentiment !== 'all'
                ? '–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
                : '–ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç–∞—Ç–µ–π'
              }
            </h3>
            <p className="text-gray-500">
              {searchTerm || filterImportance !== 'all' || filterSentiment !== 'all'
                ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞'
                : '–î–æ–±–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—å–∏ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
              }
            </p>
          </div>
        )}
      </main>
    </div>
  );
} 